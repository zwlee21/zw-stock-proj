package org.nodej.amqp.example;

import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.amqp.support.converter.JsonMessageConverter;
import org.springframework.beans.factory.config.BeanPostProcessor;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor;

@Configuration
public class IntervalBasedConfiguration extends CommonConfiguration {
	@Bean
	public BeanPostProcessor postProcessor() {
		return new ScheduledAnnotationBeanPostProcessor();
	}
	
	
	@Override
	public RabbitTemplate rabbitTemplate() {
		RabbitTemplate template = new RabbitTemplate(connectionFactory());		
		template.setExchange(exchange);
		template.setMessageConverter(new JsonMessageConverter());
		return template;
	}

    
	@Bean
	public QueueOnePriceProducer queueOnePriceProducer(){
		QueueOnePriceProducer producer = new QueueOnePriceProducer();
		producer.setRabbitTemplate(rabbitTemplate());
		producer.setQueueName("queue_A");
                producer.setRoutingKey("key.q.a");
		return producer;
	}
	@Bean
	public QueueTwoPriceProducer queueTwoPriceProducer(){
		QueueTwoPriceProducer producer = new QueueTwoPriceProducer();
		producer.setRabbitTemplate(rabbitTemplate());
		producer.setQueueName("queue_B");
                producer.setRoutingKey("key.q.b");
		return producer;
	}
	
	@Bean
	public QueueThreePriceProducer queueThreePriceProducer(){
		QueueThreePriceProducer producer = new QueueThreePriceProducer();
		producer.setRabbitTemplate(rabbitTemplate());
		producer.setQueueName("queue_C");
		producer.setRoutingKey("key.q.c");
                return producer;
	}
	@Bean
	public QueueFourPriceProducer queueFourPriceProducer(){
		QueueFourPriceProducer producer = new QueueFourPriceProducer();
		producer.setRabbitTemplate(rabbitTemplate());
		producer.setQueueName("queue_D");
                producer.setRoutingKey("key.q.d");
		return producer;
	}
	@Bean
	public QueueFivePriceProducer queueFivePriceProducer(){
		QueueFivePriceProducer producer = new QueueFivePriceProducer();
		producer.setRabbitTemplate(rabbitTemplate()); 
		producer.setQueueName("queue_E");
                producer.setRoutingKey("key.q.e");
		return producer;
	}
	
	
}
